{"version":3,"file":"static/js/625.8ef16ccd.chunk.js","mappings":"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","sources":["../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs"],"sourcesContent":["/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n"],"names":["transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","map","convertTransformToNumber","value","parseFloat","trim","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","_ref","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","undefined","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","arguments","length","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","forEach","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","transformPerspective","opacity","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","createBox","isBrowser","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","remove","removeChild","feature","isMounted","child","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","p","isStatic","reducedMotion","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useRender","ref","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","PresenceContext","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useRef","useConstant","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","MotionHandoffMarkAsComplete","createMotionComponent","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","getValueTransition","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","duration","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","isObject","isSVGElement","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isElementKeyboardAccessible","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","motion","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent"],"sourceRoot":""}